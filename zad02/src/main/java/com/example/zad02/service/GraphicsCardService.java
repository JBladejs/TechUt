package com.example.zad02.service;

import com.example.zad02.domain.GraphicsCard;

import java.sql.*;

public class GraphicsCardService {

    private final String URL = "jdbc:hsqldb:hsql://localhost/workdb";

    private Connection connection;

    private Statement statement;
    private String createTableGraphicsCard = "CREATE TABLE GraphicsCard(id bigint GENERATED BY DEFAULT AS IDENTITY, model varchar(32) UNIQUE, producer varchar(32), tflops double)";

    private PreparedStatement addGraphicsCardStmt;
    private PreparedStatement deleteAllPGraphicsCardsStmt;
    private PreparedStatement getAllGraphicsCardsStmt;


    public GraphicsCardService() throws SQLException {
        connection = DriverManager.getConnection(URL);
        statement = connection.createStatement();

        ResultSet rs = connection.getMetaData().getTables(null,null,null,null);
        boolean tableExists = false;
        while(rs.next()){
            if ("GraphicsCard".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
                tableExists = true;
                break;
            }
        }

        if(!tableExists)
            statement.executeUpdate(createTableGraphicsCard);

        addGraphicsCardStmt = connection.prepareStatement("INSERT INTO GraphicsCard(id, model, producer, tflops) VALUES (?, ?, ?, ?)");
        deleteAllPGraphicsCardsStmt = connection.prepareStatement("DELETE FROM GraphicsCard");
        getAllGraphicsCardsStmt = connection.prepareStatement("SELECT id, model, producer, tflops FROM GraphicsCard");
    }

    public Connection getConnection() {
        return connection;
    }

    public void clearGraphicsCards() throws SQLException {
        deleteAllPGraphicsCardsStmt.executeUpdate();
    }

    public addGraphicsCard(GraphicsCard gpu) throws SQLException {
        int count = 0;
        addGraphicsCardStmt.setString(1, gpu.getModel());
        addGraphicsCardStmt.setString(2, gpu.getProducer());
        addGraphicsCardStmt.setString(3, gpu.getModel());
        addGraphicsCardStmt.setString(4, gpu.getProducer());
    }
}
